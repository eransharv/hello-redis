{
  "name": "redis-connection-pool",
  "version": "1.5.0",
  "description": "a redis client connection pool",
  "license": "MIT",
  "private": false,
  "keywords": [
    "redis",
    "client",
    "database",
    "connection",
    "pool",
    "manager"
  ],
  "author": {
    "name": "Nick Jennings",
    "email": "nick@silverbucket.net"
  },
  "main": "./src/redis-connection-pool.js",
  "scripts": {
    "test": "node_modules/.bin/jaribu"
  },
  "dependencies": {
    "debug": "^2.1.0",
    "generic-pool": "^2.2.0",
    "hiredis": "^0.5.0",
    "q": "^1.4.1",
    "redis": "^2.6.2"
  },
  "devDependencies": {
    "jaribu": "^2.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/silverbucket/node-redis-connection-pool.git"
  },
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/silverbucekt/node-redis-connection-pool/issues"
  },
  "homepage": "https://github.com/silverbucket/node-redis-connection-pool",
  "readme": "node-redis-connection-pool\n==========================\n\nA node.js connection pool for Redis.\n\n[![Build Status](http://img.shields.io/travis/silverbucket/node-redis-connection-pool.svg?style=flat)](http://travis-ci.org/silverbucket/node-redis-connection-pool)\n[![license](https://img.shields.io/npm/l/redis-connection-pool.svg?style=flat)](https://npmjs.org/package/redis-connection-pool)\n[![downloads](http://img.shields.io/npm/dm/redis-connection-pool.svg?style=flat)](https://npmjs.org/package/redis-connection-pool)\n\n## About\n  node-redis-connection-pool is a high-level redis management object. It manages\na number of connections in a pool, using them as needed and keeping all aspects\nof releasing active connections internal to the object, so the user does not\nneed to worry about forgotten connections leaking resources.\n\n## Installation\n\n```javascript\nnpm install redis-connection-pool\n```\n\n## Usage\n\n```javascript\nvar redisPool = require('redis-connection-pool')('myRedisPool', {\n    host: '127.0.0.1', // default\n    port: 6379, //default\n    max_clients: 30, // defalut\n    perform_checks: false, // checks for needed push/pop functionality\n    database: 0, // database number to use\n    options: {\n      auth_pass: 'password'\n    } //options for createClient of node-redis, optional\n  });\n\nredisPool.set('test-key', 'foobar', function (err) {\n  redisPool.get('test-key', function (err, reply) {\n    console.log(reply); // 'foobar'\n  });\n});\n```\n\n## Implemented methods\n\n  * **get**\n```javascript\nget(key, cb)\n```\n\n  * **set**\n```javascript\nset(key, value, callback)\n```\n\n  * **expire**\n```javascript\nexpire(key, value, callback)\n```\n\n  * **del**\n```javascript\ndel(key, callback)\n```\n\n  * **hget**\n```javascript\nhget(key, field, callback)\n```\n\n  * **hgetall**\n```javascript\nhgetall(key, callback)\n```\n\n  * **hset**\n```javascript\nhset(key, field, value, callback)\n```\n\n  * **hdel**\n```javascript\nhdel(key, [fields], callback)\n```\n\n  * **brpop**\n```javascript\nbrpop(key, cb)\n```\n\n  * **blpop**\n```javascript\nblpop(key, cb)\n```\n\n  * **rpush**\n```javascript\nrpush(key, value, callback)\n```\n\n  * **lpush**\n```javascript\nlpush(key, value, callback)\n```\n\n\n## API Documentation\nnode-redis-connection-pool uses NaturalDocs to generate API documentation, which can be viewed after cloning the repository, in the doc/ directory, using a web browser.\n\n\n## License\n\n[MIT](https://github.com/silverbucket/node-redis-connection-pool/blob/master/LICENSE)\n\n\n\n",
  "_id": "redis-connection-pool@1.5.0",
  "_from": "redis-connection-pool@"
}
